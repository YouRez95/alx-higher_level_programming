>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 10)

>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() takes exactly 3 arguments (1 given)
>>> bg.integer_validator("my_int", "string")
Traceback (most recent call last):
    ...
TypeError: my_int must be an integer

>>> bg.integer_validator("age")
Traceback (most recent call last):
    ...
TypeError: integer_validator() takes exactly 3 arguments (2 given)
>>> bg.integer_validator("my_int", -10)
Traceback (most recent call last):
    ...
ValueError: my_int must be greater than 0

>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
    ...
ValueError: my_int must be greater than 0

>>> bg.integer_validator("my_int", None)
Traceback (most recent call last):
    ...
TypeError: my_int must be an integer

>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("age", [6])
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("age", True)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("age", {4, 5})
Traceback (most recent call last):
    ...
TypeError: age must be an integer
